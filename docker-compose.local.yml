version: "3.7"
services:
  redis:
    container_name: scheduler_redis
    image: redis:alpine
    command: [ "redis-server" ]
    ports:
      - "6379:6379"

  postgres:
    container_name: scheduler_postgres
    image: postgres:9.6
    environment:
      - POSTGRES_USER=${AIRFLOW_USER}
      - POSTGRES_PASSWORD=${AIRFLOW_PASS}
      - POSTGRES_DB=${AIRFLOW_DB}
    logging:
      options:
        max-size: 10m
        max-file: "3"

  airflow:
    container_name: scheduler_airflow
    build: .
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${AIRFLOW_USER}
      - POSTGRES_PASSWORD=${AIRFLOW_PASS}
      - POSTGRES_DB=${AIRFLOW_DB}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    command: [ "webserver" ]
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/usr/local/airflow/dags
      - ./modules:/usr/local/airflow/modules
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]" ]
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      - postgres
      - kafka
      - redis

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.5
    container_name: scheduler_zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=${ZOOKEEPER_CLIENT_PORT}
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: confluentinc/cp-kafka:5.3.5
    container_name: scheduler_kafka
    ports:
      - "9092:9092"
    environment:
      - DEFAULT_TOPIC=default_topic
      - KAFKA_ZOOKEEPER_CONNECT=${ZOOKEEPER_URL}
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_LISTENERS}
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
networks:
  default:
    name: scheduler-local-net